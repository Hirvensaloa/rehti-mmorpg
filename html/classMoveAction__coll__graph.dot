digraph "MoveAction"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{MoveAction\n||+ MoveAction()\l+ ~MoveAction()\l+ getTarget()\l+ act()\l+ getActionInfo()\l+ getMoveTime()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Action used for moving."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Action\n||+ Action()\l+ ~Action()\l+ getStartTime()\l+ getActionTime()\l+ getActionType()\l+ getActionInfo()\l+ isCompleted()\l+ act()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classAction.html",tooltip="Represents an action that an entity can perform."];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #startTimeM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{time_point\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #actionTimeM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{milliseconds\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #actionTypeM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{ActionType\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #pEntityM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{shared_ptr\< Entity \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node7 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #completedM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{bool\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #pathM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{vector\< std::pair\<\l int, int \> \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #actionTimeM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #actionTypeM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #targetM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{Coordinates\n||+ Coordinates()\l+ operator==()\l+ distance()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structCoordinates.html",tooltip="Struct for coordinates."];
  Node10 -> Node9 [color="grey25",fontsize="10",style="solid",label=" +x\n+y\n+z" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{int\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node1 [color="grey25",fontsize="10",style="solid",label=" #nextMoveM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{optional\< Coordinates \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
