digraph "Server"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Server\n||+ Server()\l+ acceptConnections()\l+ processMessages()\l+ handleMessage()\l- ticker()\l- tick()\l- sendGameState()\l- initGameState()\l- loadPlayer()\l- savePlayer()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Main class for the server."];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -messagesM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node2 [label="{MessageQueue\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -ioContextM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{io_context\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -gameWorldM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{GameWorld\n||+ GameWorld()\l+ ~GameWorld()\l+ getPlayers()\l+ getPlayer()\l+ getMap()\l+ addPlayer()\l+ removePlayer()\l+ addNpc()\l+ getNpcs()\l+ getNpc()\l+ getEntity()\l+ getObjects()\l+ getItems()\l+ addItem()\l+ removeItem()\l+ updateGameWorld()\l+ initWorld()\l+ getPlayersMutex()\l+ getItemsMutex()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classGameWorld.html",tooltip="GameWorld class. It contains all the player, npc, object and item instances."];
  Node5 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -itemsM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{map\< Coordinates, std\l::vector\< std::shared\l_ptr\< Item \> \> \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node6 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -mapM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node6 [label="{Map\n||+ loadMap()\l+ findPath()\l+ findPathToRange()\l+ getHeight()\l+ getAccessMap()\l+ getRandomCoordinates()\l+ getRandomNeighbour()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classMap.html",tooltip="Static class representing the map of the game world. Map contains information about which tiles are a..."];
  Node7 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -accessMapM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node7 [label="{vector\< std::vector\l\< uint8_t \> \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node8 -> Node6 [color="grey25",fontsize="10",style="solid",label=" -heightMapM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node8 [label="{vector\< std::vector\l\< int \> \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node9 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -itemsMutexM\n-playersMutexM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node9 [label="{mutex\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node10 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -npcsM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node10 [label="{vector\< std::shared\l_ptr\< Npc \> \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node11 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -playersM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node11 [label="{vector\< std::shared\l_ptr\< PlayerCharacter \> \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node12 -> Node4 [color="grey25",fontsize="10",style="solid",label=" -objectsM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node12 [label="{map\< std::string, std\l::shared_ptr\< Object \> \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node13 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -acceptorM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node13 [label="{acceptor\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node14 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -dbManagerM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node14 [label="{DatabaseManager\n||+ DatabaseManager()\l+ ~DatabaseManager()\l+ createConnection()\l+ loadPlayerDataFromDb()\l+ loadInventoryDataFromDb()\l+ loadEquipmentDataFromDb()\l+ loadSkillDataFromDb()\l+ savePlayerToDb()\l- getTransaction()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classDatabaseManager.html",tooltip="Class for handling database queries."];
  Node15 -> Node14 [color="grey25",fontsize="10",style="solid",label=" -pConnectionM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node15 [label="{unique_ptr\< pqxx::connection \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node16 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -connectionsM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node16 [label="{vector\< std::shared\l_ptr\< Connection \> \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node17 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -acceptThreadM\n-ioThreadM\n-tickThreadM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node17 [label="{thread\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node18 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -workGuardM" ,arrowhead="odiamond",fontname="Helvetica"];
  Node18 [label="{executor_work_guard\l\< boost::asio::io_context\l::executor_type \>\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
