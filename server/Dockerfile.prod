########################################################################################################################
# Use this file in production
# Server build stage
########################################################################################################################

FROM alpine:3.17.0 AS build

RUN apk update && \
    apk add --no-cache \
    build-base \
    cmake \
    boost1.80-dev=1.80.0-r3 \
    libpq-dev

WORKDIR /server

COPY dependencies/libpqxx ./dependencies/libpqxx

# Make sure the libpqxx branch is in 7.7.5
RUN	cd dependencies/libpqxx && \
	cmake . -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=/usr/lib -DBUILD_SHARED_LIBS=ON -DBUILD_TEST=OFF -DCMAKE_BUILD_TYPE=RelWithDebInfo && \
	make && \
	make install

COPY server/src/ ./src/
COPY server/CMakeLists.txt .

WORKDIR /server/build

RUN cmake -DCMAKE_BUILD_TYPE=Release .. && \
    cmake --build . --parallel 8

########################################################################################################################
# Server image
########################################################################################################################

FROM alpine:3.17.0

RUN apk update && \
    apk add --no-cache \
    libstdc++ \
    boost1.80-program_options=1.80.0-r3

RUN addgroup -S shs && adduser -S shs -G shs
USER shs

# Copy the libpqxx and libpq libraries from the build stage.
COPY --chown=shs:shs --from=build \
    ./usr/lib/libpq* \
    ./usr/lib/

COPY --chown=shs:shs --from=build \
    ./server/build/src/server \
    ./app/

ENTRYPOINT [ "./app/server" ]